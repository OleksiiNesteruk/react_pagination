{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","Array","from","length","_","i","isFirstPage","isLastPage","isCurrentPage","page","_jsxs","className","children","_jsx","concat","href","onClick","map","selectPage","items","to","numbers","n","push","getNumbers","App","setCurrentPage","useState","setPerPage","totalItems","indexOfFirstItem","indexOfLastItem","min","currentItems","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uKAOO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAc,CAACO,EAAGC,IAAMA,EAAI,IAEzDC,EAA8B,IAAhBX,EACdY,EAAaZ,IAAgBE,EAC7BW,EAAiBC,GAAiBd,IAAgBc,EAoBxD,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAS,aAAAG,OAAeR,EAAc,WAAa,IAAKM,SAC1DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAAeT,EACfU,QAASA,KAzBVV,GACHV,EAAaD,EAAc,IAwBSiB,SACjC,WAIFZ,EAAMiB,KAAIR,GACTI,cAAA,MAEEF,UAAS,aAAAG,OAAeN,EAAcC,GAAQ,SAAW,IAAKG,SAE9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACLC,QAASA,IAlCCP,KACdA,IAASd,GACXC,EAAaa,IAgCQS,CAAWT,GAAMG,SAE/BH,KATEA,KAaTI,cAAA,MAAIF,UAAS,aAAAG,OAAeP,EAAa,WAAa,IAAKK,SACzDC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAAeR,EACfS,QAASA,KAvCVT,GACHX,EAAaD,EAAc,IAsCKiB,SAC7B,eCnEHO,ECNC,SAAoBjB,EAAckB,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIpB,EAAMoB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAAIP,KAAIK,GAAC,QAAAR,OAAYQ,KAEpCG,EAAgBA,KAC3B,MAAO9B,EAAa+B,GAAkBC,mBAAS,IACxCjC,EAASkC,GAAcD,mBAAS,GACjCE,EAAaV,EAAMhB,OAEnB2B,GAAoBnC,EAAc,GAAKD,EACvCqC,EAAkBjC,KAAKkC,IAAIF,EAAmBpC,EAASmC,GACvDI,EAAed,EAAMe,MAAMJ,EAAkBC,GAOnD,OACErB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,SAAAE,OACvBnB,EAAW,eAAAmB,OACTgB,EAAmB,EAAC,OAAAhB,OAAMiB,EAAe,cAGtDrB,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCC,cAAA,UACE,UAAQ,kBACRsB,GAAG,kBACHxB,UAAU,eACVyB,MAAO1C,EACP2C,SArBmBC,IAC3BV,EAAWW,OAAOD,EAAME,OAAOJ,QAC/BV,EAAe,IAmBuBd,SAE7B,CAAC,EAAG,EAAG,GAAI,IAAIK,KAAIK,GAClBT,cAAA,UAAgBuB,MAAOd,EAAEV,SACtBU,GADUA,SAOnBT,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAIlEC,cAACtB,EAAU,CACTE,MAAOoC,EACPnC,QAASA,EACTC,YAAaA,EACbC,aAAca,GAAQiB,EAAejB,KAEvCI,cAAA,MAAAD,SACGqB,EAAahB,KAAIyB,GAChB7B,cAAA,MAAe,UAAQ,OAAMD,SAC1B8B,GADMA,WEzDnBC,IAASC,OAAO/B,cAACY,EAAG,IAAKoB,SAASC,eAAe,U","file":"static/js/main.21e68cbe.chunk.js","sourcesContent":["interface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n  const isCurrentPage = (page: number) => currentPage === page;\n\n  const goPreviousPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const selectPage = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const goNextPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${isFirstPage ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => goPreviousPage()}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={`page-item ${isCurrentPage(page) ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href=\"#page\"\n            onClick={() => selectPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={`page-item ${isLastPage ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => goNextPage()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const totalItems = items.length;\n\n  const indexOfFirstItem = (currentPage - 1) * perPage;\n  const indexOfLastItem = Math.min(indexOfFirstItem + perPage, totalItems);\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `}\n        {`(items ${indexOfFirstItem + 1} - ${indexOfLastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            {[3, 5, 10, 20].map(n => (\n              <option key={n} value={n}>\n                {n}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={page => setCurrentPage(page)}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}